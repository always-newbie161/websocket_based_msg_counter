name: WebSocket Message Counter CI

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master ]

jobs:
  build-test-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Start services
      run: |
        cd docker
        docker compose up -d redis nginx app_blue loki
    
    - name: Wait for services to be ready
      run: |
        timeout 60 sh -c 'until curl -f http://localhost:8080/healthz/; do sleep 2; done'
        timeout 30 sh -c 'until curl -f http://localhost:8080/readyz/; do sleep 2; done'
    
    - name: Run integration tests
      run: |
        cd app && python -m pytest ../tests/test_websocket.py::test_websocket_integration -v
    
    - name: Run monitoring script
      run: |
        chmod +x scripts/monitor.sh
        timeout 30 ./scripts/monitor.sh 20 monitor || true
    
    - name: Run load test
      run: |
        timeout 30 python tests/socket_load_test.py --sockets 100 --rate 20 --duration 20 --host ws://localhost:8080 || true
    
    - name: Test blue-green deployment
      if: github.ref == 'refs/heads/master'
      run: |
        chmod +x scripts/promote.sh
      
        
        # Test promotion to green
        ./scripts/promote.sh green
        
        # Verify green is active
        timeout 60 sh -c 'until curl -f http://localhost:8080/healthz/; do sleep 2; done'
        
        # Test rollback to blue
        ./scripts/promote.sh blue
        
        # Verify blue is active again
        timeout 60 sh -c 'until curl -f http://localhost:8080/healthz/; do sleep 2; done'
    
    - name: Collect logs
      if: always()
      run: |
        mkdir -p artifacts/logs
        cd docker
        docker compose logs app_blue > ../artifacts/logs/app_blue.log 2>&1 || true
        docker compose logs app_green > ../artifacts/logs/app_green.log 2>&1 || true
        docker compose logs redis > ../artifacts/logs/redis.log 2>&1 || true
        docker logs $(docker ps -q) > ../artifacts/logs/all_containers.log 2>&1 || true
    
    - name: Archive logs and artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-artifacts
        path: artifacts/
        retention-days: 7
    
    - name: Cleanup
      if: always()
      run: |
        cd docker
        docker compose down -v
